version: 2.1

master_filter: &master_filter
  branches:
    only: master

develop_filter: &develop_filter
  branches:
    only: develop

stage_filter: &stage_filter
  branches:
    only: stage


feature_filter: &feature_filter
  branches:
    ignore:
      - master
      - develop
      - stage

orbs:
  node: circleci/node@2.0.1
  slack: circleci/slack@3.2.0

executors:
  node:
    docker:
      - image: circleci/ruby:latest-node
        environment:
          API_URL: $API_URL

commands:
  build:
    steps:
      - checkout
      - run: gem install bundler
      - run: bundle install
      - run: bundle update fastlane
      - run: npm install
  login_to_expo:
    steps:
      - run: npx expo-cli login -u $EXPO_USERNAME -p $EXPO_PASSWORD
  publish_to_expo:
    steps:
      - login_to_expo
      - run: echo "API_URL=$API_URL" > .env
      - run: echo "$GOOGLE_SERVICE_JSON" | base64 --decode > google-services.json
      - run: npx expo-cli publish --non-interactive --max-workers 1 --release-channel $RELEASE_CHANNEL    
  deploy_android:
    steps:
      - run: 
          command: npx expo-cli build:android --release-channel $RELEASE_CHANNEL --non-interactive --no-publish
          no_output_timeout: 2h
      - run: curl -o fastlane/app.apk "$(npx expo-cli url:apk --non-interactive)"
      - run: bundle exec fastlane android $FASTLANE_LANE app_name:$APPCENTER_APP_NAME_ANDROID
      - store_artifacts:
          path: ~/covid-react/fastlane/app.apk
  deploy_ios:
    steps:
      - run: 
          command: npx expo-cli build:ios --release-channel $RELEASE_CHANNEL --non-interactive --no-publish
          no_output_timeout: 2h
      - run: curl -o fastlane/app.ipa "$(expo url:ipa --non-interactive)"
      - run: bundle exec fastlane ios $FASTLANE_LANE app_name:$APPCENTER_APP_NAME_IOS
      - store_artifacts:
          path: ~/covid-react/fastlane/app.ipa    

jobs:
  build_and_test:
    executor: node
    working_directory: ~/covid-react
    steps:
      - build
      - run: npm test
  deploy:
    executor: node
    working_directory: ~/covid-react
    steps:
      - build
      - publish_to_expo
      - deploy_android
      - deploy_ios    


workflows:
  build_and_test:
    jobs:
      - build_and_test:
          filters: *feature_filter

  stage:
    jobs:
      - build_and_test:
          filters: *stage_filter
      - deploy:
          filters: *stage_filter
          context: stage
          requires:
            - build_and_test

  develop:
    jobs:
      - build_and_test:
          filters: *develop_filter
      - deploy:
          filters: *develop_filter
          context: dev
          requires:
            - build_and_test

  master:
    jobs:
      - build_and_test:
          filters: *master_filter
